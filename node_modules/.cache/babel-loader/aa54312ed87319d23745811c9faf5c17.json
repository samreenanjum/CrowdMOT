{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport { TwoDimensionalVideo } from \"react-annotation-tool\";\nimport Instructions from \"../videoInstruction/VideoInstruction\";\nimport { Container, Row, Col, Card, CardBody, CardTitle, CardText } from 'reactstrap';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nvar Demo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Demo, _Component);\n\n  function Demo(props) {\n    var _this;\n\n    _classCallCheck(this, Demo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Demo).call(this, props)); // const fs = require('fs');\n\n    _defineProperty(_assertThisInitialized(_this), \"handleResultSubmit\", function (result) {\n      _this.setState({\n        result: result\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (event) {\n      var target = event.target;\n      var name = target.name;\n      var value = target.type === \"checkbox\" ? target.checked : target.value;\n\n      _this.setState(function (preState) {\n        var input = preState.input;\n        return {\n          input: _objectSpread({}, input, _defineProperty({}, name, value))\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var result, readFilePromise, _result, _result$url, url, _result$videoWidth, videoWidth, _result$defaultAnnota, defaultAnnotations;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                result = {};\n\n                if (!_this.fileInput.current.files[0]) {\n                  _context.next = 7;\n                  break;\n                }\n\n                readFilePromise = new _Promise(function (resolve, reject) {\n                  var fileReader = new FileReader();\n\n                  fileReader.onload = function (event) {\n                    if (!_this.isJsonString(event.target.result)) reject('Wrong json format');\n                    var result = JSON.parse(event.target.result);\n                    resolve(result);\n                  };\n\n                  fileReader.onerror = function (event) {\n                    reject(event);\n                  };\n\n                  fileReader.readAsText(_this.fileInput.current.files[0]);\n                });\n                _context.next = 6;\n                return readFilePromise;\n\n              case 6:\n                result = _context.sent;\n\n              case 7:\n                _result = result, _result$url = _result.url, url = _result$url === void 0 ? '' : _result$url, _result$videoWidth = _result.videoWidth, videoWidth = _result$videoWidth === void 0 ? 0 : _result$videoWidth, _result$defaultAnnota = _result.defaultAnnotations, defaultAnnotations = _result$defaultAnnota === void 0 ? [] : _result$defaultAnnota;\n\n                _this.setState(function (preState) {\n                  var input = preState.input;\n\n                  if (annotations.length === 0) {\n                    defaultAnnotations = _this.isJsonString(input.defaultAnnotations) ? JSON.parse(input.defaultAnnotations) : [];\n                  }\n\n                  return {\n                    params: {\n                      defaultAnnotations: defaultAnnotations,\n                      url: url || input.url,\n                      videoWidth: videoWidth !== 0 ? videoWidth : _parseInt(input.videoWidth, 10)\n                    }\n                  };\n                });\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"isJsonString\", function (str) {\n      try {\n        JSON.parse(str);\n      } catch (e) {\n        return false;\n      }\n\n      return true;\n    });\n\n    var _defaultAnnotations = [];\n    var previewNoticeList = ['Bosy range of the objects', 'Time at which the objects <u>leave</u>, <u>obscured</u>, <u>show up</u> and/or <u>split</u> (if applicable).'];\n    var previewHeader = 'Please scan the video and observe the following to help you complete the task:';\n    var emptyCheckSubmissionWarningText = 'Please annotate AND track one unmarked object to complete this task.';\n    var emptyCheckAnnotationItemWarningText = 'Step 2: Please track the object bound by this box';\n    var emptyAnnotationReminderText = 'Step 1: Click the button above to add a new box around a object'; //const previewNotices = [\"Body range of the objects\", \"Time at which the objects <u>leave</u>, <u>obscured</u>, <u>show up</u> and/or <u>split</u> (if applicable)\"];\n\n    var _url = 'https://cildata.crbs.ucsd.edu/media/videos/50507/50507_web.mp4';\n    var _videoWidth = 500; //\t    const annotationWidth = 600;\n\n    /*\t\tthis.state = {\n    \t\t\tresult: null,\n    \t\t\tinput: {\n    \t\t\t\tannotations: JSON.stringify(annotations),\n    \t\t\t\turl: url,\n    \t\t\t\tannotationWidth: annotationWidth\n    \t\t\t },\n    \t\t\tparams: {\n    \t\t\t\tannotations: annotations,\n    \t\t\t\turl: url,\n    \t\t\t\tpreviewNotices: previewNotices,\n    \t\t\t\tannotationWidth: annotationWidth\n    \t\t\t}\n    \t\t}\n    \t}\n    */\n\n    _this.fileInput = React.createRef();\n    _this.state = {\n      result: null,\n      input: {\n        defaultAnnotations: _JSON$stringify(_defaultAnnotations),\n        url: _url,\n        videoWidth: _videoWidth,\n        previewHeader: previewHeader,\n        previewNoticeList: previewNoticeList,\n        //emptyCheckSubmissionWarningText,\n        emptyCheckAnnotationItemWarningText: emptyCheckAnnotationItemWarningText,\n        emptyAnnotationReminderText: emptyAnnotationReminderText\n      },\n      params: {\n        defaultAnnotations: [],\n        url: _url,\n        videoWidth: _videoWidth,\n        previewHeader: previewHeader,\n        previewNoticeList: previewNoticeList,\n        //emptyCheckSubmissionWarningText,\n        emptyCheckAnnotationItemWarningText: emptyCheckAnnotationItemWarningText,\n        emptyAnnotationReminderText: emptyAnnotationReminderText\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Demo, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          result = _this$state.result,\n          input = _this$state.input,\n          params = _this$state.params;\n      var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(_JSON$stringify(result));\n      return React.createElement(Container, {\n        fluid: true,\n        className: \"py-3\"\n      }, React.createElement(\"h1\", {\n        className: \"display-4  text-center\"\n      }, \"CrowdMOT: A Video Annotation Tool\"), React.createElement(Row, {\n        className: \"my-3 col-xs-12 col-lg-10 offset-lg-1\"\n      }, React.createElement(Col, null, React.createElement(Instructions, null))), React.createElement(Form, {\n        className: \"mb-2 col-xs-12 col-lg-10 offset-lg-1\",\n        onSubmit: this.handleSubmit\n      }, React.createElement(FormGroup, null, React.createElement(Label, {\n        for: \"URL\"\n      }, React.createElement(\"b\", null, \"Enter the video URL:\")), React.createElement(Input, {\n        type: \"text\",\n        name: \"url\",\n        placeholder: \"http://...\",\n        value: input.url,\n        onChange: this.handleChange\n      }))), React.createElement(Row, {\n        className: \"py-3\",\n        style: {\n          background: \"rgb(246, 246, 246)\"\n        }\n      }, React.createElement(Col, null, React.createElement(TwoDimensionalVideo, {\n        key: \"\".concat(_JSON$stringify(params.url), \"\\n\\t\\t\\t\\t\\t\\t\\t    \").concat(_JSON$stringify(params.defaultAnnotations), \"\\n\\t\\t\\t\\t\\t\\t\\t    \").concat(_JSON$stringify(params.videoWidth), \"\\n\\t\\t\\t\\t\\t\\t\\t    \").concat(_JSON$stringify(params.previewHeader), \"\\n\\t\\t\\t\\t\\t\\t\\t    \").concat(_JSON$stringify(params.previewNoticeList))\n        /*\t\t\t\t\t\t\tonSubmit={ this.handleResultSubmit }\n        \t\t\t\t\t\t\turl={ params.url }\n        \t\t\t\t\t\t\tannotations = { params.annotations }\n        \t\tannotationWidth = { params.annotationWidth }\n        \t\tnumberOfParentAnnotationsToBeAdded = {100000}\n        \t\tpreviewNotices = { params.previewNotices }*/\n        ,\n        onSubmit: this.handleResultSubmit,\n        url: params.url,\n        annotations: params.annotations,\n        videoWidth: params.videoWidth,\n        previewHeader: params.previewHeader,\n        previewNoticeList: params.previewNoticeList,\n        hasReview: true,\n        isEmptyCheckEnable: true,\n        isSplitEnable: true,\n        isShowHideEnable: true,\n        numAnnotationsToBeAdded: 100000,\n        emptyCheckSubmissionWarningText: params.emptyCheckSubmissionWarningText,\n        emptyCheckAnnotationItemWarningText: params.emptyCheckAnnotationItemWarningText,\n        emptyAnnotationReminderText: params.emptyAnnotationReminderText\n      }))), React.createElement(Row, {\n        className: \"my-3 col-xs-12 col-lg-10 offset-lg-1\"\n      }, React.createElement(Col, null, React.createElement(Card, null, React.createElement(CardBody, null, React.createElement(\"a\", {\n        href: dataStr,\n        className: \"btn btn-secondary btn-lg\",\n        download: \"\".concat(params.url, \".json\")\n      }, \" Download the Annotations\")))), \"  \"));\n    }\n  }]);\n\n  return Demo;\n}(Component);\n\nexport default Demo;","map":{"version":3,"sources":["/var/www/html/videoannot/CrowdMOT/components/videoAnnotationDemo/VideoAnnotationDemo.js"],"names":["React","Component","TwoDimensionalVideo","Instructions","Container","Row","Col","Card","CardBody","CardTitle","CardText","Button","Form","FormGroup","Label","Input","Demo","props","result","setState","event","target","name","value","type","checked","preState","input","preventDefault","fileInput","current","files","readFilePromise","resolve","reject","fileReader","FileReader","onload","isJsonString","JSON","parse","onerror","readAsText","url","videoWidth","defaultAnnotations","annotations","length","params","str","e","previewNoticeList","previewHeader","emptyCheckSubmissionWarningText","emptyCheckAnnotationItemWarningText","emptyAnnotationReminderText","createRef","state","dataStr","encodeURIComponent","handleSubmit","handleChange","background","handleResultSubmit"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { TwoDimensionalVideo } from \"react-annotation-tool\"\nimport Instructions from \"../videoInstruction/VideoInstruction\"\nimport { Container, Row, Col, Card, CardBody, CardTitle, CardText } from 'reactstrap';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\n\nclass Demo extends Component {\n\tconstructor(props){\n\t    super(props)\n\t   // const fs = require('fs');\n\t    const defaultAnnotations = [];\n\t    const previewNoticeList = [\n\t\t'Bosy range of the objects',\n\t\t'Time at which the objects <u>leave</u>, <u>obscured</u>, <u>show up</u> and/or <u>split</u> (if applicable).',\n\t    ];\n\t    const previewHeader = 'Please scan the video and observe the following to help you complete the task:';\n\t    const emptyCheckSubmissionWarningText = 'Please annotate AND track one unmarked object to complete this task.';\n\t    const emptyCheckAnnotationItemWarningText = 'Step 2: Please track the object bound by this box';\n\t    const emptyAnnotationReminderText = 'Step 1: Click the button above to add a new box around a object';\n\t\t//const previewNotices = [\"Body range of the objects\", \"Time at which the objects <u>leave</u>, <u>obscured</u>, <u>show up</u> and/or <u>split</u> (if applicable)\"];\n\t\tconst url = 'https://cildata.crbs.ucsd.edu/media/videos/50507/50507_web.mp4';\n\t    const videoWidth = 500;\n//\t    const annotationWidth = 600;\n/*\t\tthis.state = {\n\t\t\tresult: null,\n\t\t\tinput: {\n\t\t\t\tannotations: JSON.stringify(annotations),\n\t\t\t\turl: url,\n\t\t\t\tannotationWidth: annotationWidth\n\t\t\t },\n\t\t\tparams: {\n\t\t\t\tannotations: annotations,\n\t\t\t\turl: url,\n\t\t\t\tpreviewNotices: previewNotices,\n\t\t\t\tannotationWidth: annotationWidth\n\t\t\t}\n\t\t}\n\t}\n*/\n\t    this.fileInput = React.createRef();\n\t    this.state = {\n\t\tresult: null,\n\t\tinput: {\n\t\t    defaultAnnotations: JSON.stringify(defaultAnnotations),\n\t\t    url,\n\t\t    videoWidth,\n\t\t    previewHeader,\n\t\t    previewNoticeList,\n\t\t    //emptyCheckSubmissionWarningText,\n\t\t    emptyCheckAnnotationItemWarningText,\n\t\t    emptyAnnotationReminderText,\n\t\t},\n\t\tparams: {\n\t\t    defaultAnnotations: [],\n\t\t    url,\n\t\t    videoWidth,\n\t\t    previewHeader,\n\t\t    previewNoticeList,\n\t\t    //emptyCheckSubmissionWarningText,\n\t\t    emptyCheckAnnotationItemWarningText,\n\t\t    emptyAnnotationReminderText,\n\t\t}\n\t    }\n\t}\n\thandleResultSubmit = result => {\n\t\tthis.setState({ result: result });\n\t}\n\n\thandleChange = event => {\n\t\tconst target = event.target;\n\t\tconst name = target.name;\n\t\tconst value = target.type === \"checkbox\" ? target.checked : target.value;\n\t\tthis.setState((preState) => {\n\t\t\tconst { input } = preState;\n\t\t\treturn {\n\t\t\t\tinput: { ...input, [name]: value }\n\t\t\t}\n\n\t\t})\n    }\n\n    /*handleSubmit = event => {\n\t\tevent.preventDefault();\n\t  \tthis.setState((preState) => {\n\t\t\t\tconst { input } = preState;\n\t\t\t\tconst annotations = this.isJsonString(input.annotations) ? input.annotations : \"[]\";\n\t\t  \t\treturn { params: {\n\t\t\t\t\t\t\tannotations: JSON.parse(annotations),\n\t\t\t\t\t\t\turl: input.url,\n\t\t\t\t\t\t\tannotationWidth: parseInt(input.annotationWidth, 10)\n\t\t\t\t\t\t}\n\t\t\t\t};\n\t  \t\t}\n  \t\t);\n\t\t}*/\n\thandleSubmit = async event => {\n\t    event.preventDefault();\n\t    let result = {};\n\t    if (this.fileInput.current.files[0]) {\n\t\tconst readFilePromise = new Promise( (resolve, reject) => {\n\t\t    const fileReader = new FileReader();\n\t\t    fileReader.onload = event => {\n\t\t\tif (!this.isJsonString(event.target.result))\n\t\t\t    reject('Wrong json format');\n\n\t\t\tlet result = JSON.parse(event.target.result);\n\t\t\tresolve( result )\n\t\t    }\n\t\t    fileReader.onerror = event => {\n\t\t\treject(event);\n\t\t    }\n\t\t    fileReader.readAsText(this.fileInput.current.files[0]);\n\t\t})\n\t\tresult = await readFilePromise;\n\t    }\n\n\t    let {url = '', videoWidth = 0, defaultAnnotations = []} = result;\n\n\t    this.setState( (preState) => {\n\t\tconst { input } = preState;\n\t\tif ( annotations.length === 0 ) {\n\t\t    defaultAnnotations = this.isJsonString(input.defaultAnnotations) ? JSON.parse(input.defaultAnnotations) : [];\n\t\t}\n\t\treturn { params: {\n\t\t    defaultAnnotations,\n\t\t    url: url || input.url,\n\t\t    videoWidth: ( videoWidth !== 0 ? videoWidth : parseInt(input.videoWidth, 10) )\n\t\t}\n\t\t       };\n\t    }\n\t\t\t );\n\t}\n\n\tisJsonString = str => {\n\t    try {\n\t        JSON.parse(str);\n\t    } catch (e) {\n\t        return false;\n\t    }\n\t    return true;\n\t}\n\n\trender() {\n\t\tconst { result, input, params } = this.state\n\t    \t    let dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(result));\n\t    return (\n\t\t\t<Container fluid className=\"py-3\">\n\t\t    <h1 className=\"display-4  text-center\">CrowdMOT: A Video Annotation Tool</h1>\n\t\t\t<Row className=\"my-3 col-xs-12 col-lg-10 offset-lg-1\">\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Instructions />\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t    <Form className=\"mb-2 col-xs-12 col-lg-10 offset-lg-1\" onSubmit={this.handleSubmit}>\n\t\t\t\t\t<FormGroup>\n\t\t    <Label for=\"URL\"><b>Enter the video URL:</b></Label>\n\t\t\t\t\t  <Input type=\"text\" name=\"url\" placeholder=\"http://...\" value={input.url} onChange={this.handleChange} />\n\t\t\t        </FormGroup>\n\t\t\t\t\t\t\t\t\t\n\t\t\t    </Form>\n\t\n\t\t\t\t<Row className=\"py-3\" style={{background: \"rgb(246, 246, 246)\"}}>\n\t\t      \t\t<Col>\n\t\t\t\t\t\t<TwoDimensionalVideo\n\t\t\t\t\t\t\tkey= {\n\t\t\t\t\t\t\t\t`${JSON.stringify(params.url)}\n\t\t\t\t\t\t\t    ${JSON.stringify(params.defaultAnnotations)}\n\t\t\t\t\t\t\t    ${JSON.stringify(params.videoWidth)}\n\t\t\t\t\t\t\t    ${JSON.stringify(params.previewHeader)}\n\t\t\t\t\t\t\t    ${JSON.stringify(params.previewNoticeList)}`\n\t\t\t\t\t\t\t}\n/*\t\t\t\t\t\t\tonSubmit={ this.handleResultSubmit }\n\t\t\t\t\t\t\turl={ params.url }\n\t\t\t\t\t\t\tannotations = { params.annotations }\n\t\tannotationWidth = { params.annotationWidth }\n\t\tnumberOfParentAnnotationsToBeAdded = {100000}\n\t\tpreviewNotices = { params.previewNotices }*/\n\t\tonSubmit={ this.handleResultSubmit }\n\t\turl={ params.url }\n\t\tannotations = { params.annotations }\n\t\tvideoWidth = { params.videoWidth }\n\t\tpreviewHeader = { params.previewHeader }\n\t\tpreviewNoticeList = { params.previewNoticeList }\n\t\thasReview\n\t\tisEmptyCheckEnable\n\t\tisSplitEnable\n\t\tisShowHideEnable\n\t\tnumAnnotationsToBeAdded={ 100000 }\n\t\temptyCheckSubmissionWarningText={ params.emptyCheckSubmissionWarningText }\n\t\temptyCheckAnnotationItemWarningText={ params.emptyCheckAnnotationItemWarningText }\n\t\temptyAnnotationReminderText={ params.emptyAnnotationReminderText }\n\t\t\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t    \t</Row>\n\n\t\t\t<Row className=\"my-3 col-xs-12 col-lg-10 offset-lg-1\">\n\t<Col>\n\t\t    <Card><CardBody><a href={dataStr} className=\"btn btn-secondary btn-lg\" download={`${params.url}.json`}> Download the Annotations</a></CardBody></Card>\n\t\t   \n\t\t    \n\t\t</Col>  </Row>\n\n\n\t\n\t\t</Container>\n\n\t    );\n\n\t\t\n\t    \n\t}\n}\nexport default Demo;\n"]},"metadata":{},"sourceType":"module"}