{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport { VideoTool } from \"react-annotation-tool\";\nimport Instructions from \"../videoInstruction/VideoInstruction\";\nimport { Container, Row, Col, Card, CardBody, CardTitle, CardText } from 'reactstrap';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nvar Demo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Demo, _Component);\n\n  function Demo(props) {\n    var _this;\n\n    _classCallCheck(this, Demo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Demo).call(this, props)); // const fs = require('fs');\n\n    _defineProperty(_assertThisInitialized(_this), \"handleResultSubmit\", function (result) {\n      _this.setState({\n        result: result\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (event) {\n      var target = event.target;\n      var name = target.name;\n      var value = target.type === \"checkbox\" ? target.checked : target.value;\n\n      _this.setState(function (preState) {\n        var input = preState.input;\n        return {\n          input: _objectSpread({}, input, _defineProperty({}, name, value))\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (event) {\n      event.preventDefault();\n\n      _this.setState(function (preState) {\n        var input = preState.input;\n        var annotations = _this.isJsonString(input.annotations) ? input.annotations : \"[]\";\n        return {\n          params: {\n            annotations: JSON.parse(annotations),\n            url: input.url,\n            annotationWidth: _parseInt(input.annotationWidth, 10)\n          }\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"isJsonString\", function (str) {\n      try {\n        JSON.parse(str);\n      } catch (e) {\n        return false;\n      }\n\n      return true;\n    });\n\n    var _annotations = [];\n    var previewNotices = [\"Body range of the objects\", \"Time at which the objects <u>leave</u>, <u>obscured</u>, <u>show up</u> and/or <u>split</u> (if applicable)\"];\n    var url = 'https://cildata.crbs.ucsd.edu/media/videos/50507/50507_web.mp4';\n    var annotationWidth = 600;\n    _this.state = {\n      result: null,\n      input: {\n        annotations: _JSON$stringify(_annotations),\n        url: url,\n        annotationWidth: annotationWidth\n      },\n      params: {\n        annotations: _annotations,\n        url: url,\n        previewNotices: previewNotices,\n        annotationWidth: annotationWidth\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Demo, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          result = _this$state.result,\n          input = _this$state.input,\n          params = _this$state.params;\n      var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(_JSON$stringify(result));\n      return React.createElement(Container, {\n        fluid: true,\n        className: \"py-3\"\n      }, React.createElement(\"h1\", {\n        className: \"display-4  text-center\"\n      }, \"CrowdMOT: A Video Annotation Tool\"), React.createElement(Row, {\n        className: \"my-3 col-xs-12 col-lg-10 offset-lg-1\"\n      }, React.createElement(Col, null, React.createElement(Instructions, null))), React.createElement(Form, {\n        className: \"mb-2 col-xs-12 col-lg-10 offset-lg-1\",\n        onSubmit: this.handleSubmit\n      }, React.createElement(FormGroup, null, React.createElement(Label, {\n        for: \"URL\"\n      }, React.createElement(\"b\", null, \"Enter the video URL:\")), React.createElement(Input, {\n        type: \"text\",\n        name: \"url\",\n        placeholder: \"http://...\",\n        value: input.url,\n        onChange: this.handleChange\n      }))), React.createElement(Row, {\n        className: \"py-3\",\n        style: {\n          background: \"rgb(246, 246, 246)\"\n        }\n      }, React.createElement(Col, null, React.createElement(VideoTool, {\n        key: \"\".concat(_JSON$stringify(params.url), \"\\n\\t\\t\\t\\t\\t\\t\\t\\t \").concat(_JSON$stringify(params.annotations), \"\\n\\t\\t\\t\\t\\t\\t\\t\\t \").concat(_JSON$stringify(params.annotationWidth), \"\\n\\t\\t\\t\\t\\t\\t\\t\\t \").concat(_JSON$stringify(params.previewNotices)),\n        onSubmit: this.handleResultSubmit,\n        url: params.url,\n        annotations: params.annotations,\n        annotationWidth: params.annotationWidth,\n        numberOfParentAnnotationsToBeAdded: 100000,\n        previewNotices: params.previewNotices\n      }))), React.createElement(Row, {\n        className: \"my-3 col-xs-12 col-lg-10 offset-lg-1\"\n      }, React.createElement(Col, null, React.createElement(Card, null, React.createElement(CardBody, null, React.createElement(\"a\", {\n        href: dataStr,\n        className: \"btn btn-secondary btn-lg\",\n        download: \"\".concat(params.url, \".json\")\n      }, \" Download the Annotations\")))), \"  \"));\n    }\n  }]);\n\n  return Demo;\n}(Component);\n\nexport default Demo;","map":{"version":3,"sources":["/var/www/html/videoannot/tool-interface/components/videoAnnotationDemo/VideoAnnotationDemo.js"],"names":["React","Component","VideoTool","Instructions","Container","Row","Col","Card","CardBody","CardTitle","CardText","Button","Form","FormGroup","Label","Input","Demo","props","result","setState","event","target","name","value","type","checked","preState","input","preventDefault","annotations","isJsonString","params","JSON","parse","url","annotationWidth","str","e","previewNotices","state","dataStr","encodeURIComponent","handleSubmit","handleChange","background","handleResultSubmit"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { VideoTool } from \"react-annotation-tool\"\nimport Instructions from \"../videoInstruction/VideoInstruction\"\nimport { Container, Row, Col, Card, CardBody, CardTitle, CardText } from 'reactstrap';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\n\nclass Demo extends Component {\n\tconstructor(props){\n\t    super(props)\n\t   // const fs = require('fs');\n\t    const annotations = [];\n\t\tconst previewNotices = [\"Body range of the objects\", \"Time at which the objects <u>leave</u>, <u>obscured</u>, <u>show up</u> and/or <u>split</u> (if applicable)\"];\n\t\tconst url = 'https://cildata.crbs.ucsd.edu/media/videos/50507/50507_web.mp4';\n\t\tconst annotationWidth = 600;\n\t\tthis.state = {\n\t\t\tresult: null,\n\t\t\tinput: {\n\t\t\t\tannotations: JSON.stringify(annotations),\n\t\t\t\turl: url,\n\t\t\t\tannotationWidth: annotationWidth\n\t\t\t },\n\t\t\tparams: {\n\t\t\t\tannotations: annotations,\n\t\t\t\turl: url,\n\t\t\t\tpreviewNotices: previewNotices,\n\t\t\t\tannotationWidth: annotationWidth\n\t\t\t}\n\t\t}\n\t}\n\n\thandleResultSubmit = result => {\n\t\tthis.setState({ result: result });\n\t}\n\n\thandleChange = event => {\n\t\tconst target = event.target;\n\t\tconst name = target.name;\n\t\tconst value = target.type === \"checkbox\" ? target.checked : target.value;\n\t\tthis.setState((preState) => {\n\t\t\tconst { input } = preState;\n\t\t\treturn {\n\t\t\t\tinput: { ...input, [name]: value }\n\t\t\t}\n\n\t\t})\n    }\n\n    handleSubmit = event => {\n\t\tevent.preventDefault();\n\t  \tthis.setState((preState) => {\n\t\t\t\tconst { input } = preState;\n\t\t\t\tconst annotations = this.isJsonString(input.annotations) ? input.annotations : \"[]\";\n\t\t  \t\treturn { params: {\n\t\t\t\t\t\t\tannotations: JSON.parse(annotations),\n\t\t\t\t\t\t\turl: input.url,\n\t\t\t\t\t\t\tannotationWidth: parseInt(input.annotationWidth, 10)\n\t\t\t\t\t\t}\n\t\t\t\t};\n\t  \t\t}\n  \t\t);\n\t}\n\n\tisJsonString = str => {\n\t    try {\n\t        JSON.parse(str);\n\t    } catch (e) {\n\t        return false;\n\t    }\n\t    return true;\n\t}\n\n\trender() {\n\t\tconst { result, input, params } = this.state\n\t    \t    let dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(result));\n\t    return (\n\t\t\t<Container fluid className=\"py-3\">\n\t\t    <h1 className=\"display-4  text-center\">CrowdMOT: A Video Annotation Tool</h1>\n\t\t\t<Row className=\"my-3 col-xs-12 col-lg-10 offset-lg-1\">\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Instructions />\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t    <Form className=\"mb-2 col-xs-12 col-lg-10 offset-lg-1\" onSubmit={this.handleSubmit}>\n\t\t\t\t\t<FormGroup>\n\t\t    <Label for=\"URL\"><b>Enter the video URL:</b></Label>\n\t\t\t\t\t  <Input type=\"text\" name=\"url\" placeholder=\"http://...\" value={input.url} onChange={this.handleChange} />\n\t\t\t        </FormGroup>\n\t\t\t\t\t\t\t\t\t\n\t\t\t    </Form>\n\t\n\t\t\t\t<Row className=\"py-3\" style={{background: \"rgb(246, 246, 246)\"}}>\n\t\t      \t\t<Col>\n\t\t\t\t\t\t<VideoTool\n\t\t\t\t\t\t\tkey= {\n\t\t\t\t\t\t\t\t`${JSON.stringify(params.url)}\n\t\t\t\t\t\t\t\t ${JSON.stringify(params.annotations)}\n\t\t\t\t\t\t\t\t ${JSON.stringify(params.annotationWidth)}\n\t\t\t\t\t\t\t\t ${JSON.stringify(params.previewNotices)}`\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonSubmit={ this.handleResultSubmit }\n\t\t\t\t\t\t\turl={ params.url }\n\t\t\t\t\t\t\tannotations = { params.annotations }\n\t\tannotationWidth = { params.annotationWidth }\n\t\tnumberOfParentAnnotationsToBeAdded = {100000}\n\t\tpreviewNotices = { params.previewNotices }\n\t\t\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t    \t</Row>\n\n\t\t\t<Row className=\"my-3 col-xs-12 col-lg-10 offset-lg-1\">\n\t<Col>\n\t\t    <Card><CardBody><a href={dataStr} className=\"btn btn-secondary btn-lg\" download={`${params.url}.json`}> Download the Annotations</a></CardBody></Card>\n\t\t   \n\t\t    \n\t\t</Col>  </Row>\n\n\n\t\n\t\t</Container>\n\n\t    );\n\n\t\t\n\t    \n\t}\n}\nexport default Demo;\n"]},"metadata":{},"sourceType":"module"}